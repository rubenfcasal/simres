% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rng.R
\name{set.rng}
\alias{set.rng}
\alias{.rng}
\alias{rng}
\alias{rlcg}
\alias{rvng}
\title{Pseudorandom number generation}
\usage{
set.rng(seed = as.numeric(Sys.time()), type = c("lcg", "vng"), ...)

rng(n)

rlcg(n, seed = as.numeric(Sys.time()), a = 7^5, c = 0, m = 2^31 - 1)

rvng(n, seed = as.numeric(Sys.time()), k = 4)
}
\arguments{
\item{seed}{initial seed.}

\item{type}{string specifying the generator.}

\item{...}{generator parameters.}

\item{n}{number of generations.}

\item{a}{multiplier.}

\item{c}{increment.}

\item{m}{modulus.}

\item{k}{number of digits.}
}
\value{
\code{set.rng()} stores the state of the generator in \code{.rng} in the global
environment.

\code{rng()}, \code{rlcg()} and \code{rvmg()} return a numeric vector.
}
\description{
\code{.rng} is a list containing the state of the uniform pseudorandom number
generator (with components \code{seed}, \code{method} and \code{parameters}).
It is advisable to use \code{set.rng()} to set it.

\code{rng()} returns a sequence of uniform pseudorandom numbers
(using the generator selected with \code{set.rng()}).

\code{rlcg()} returns a sequence of uniform pseudorandom numbers
using the linear congruential generator (LCG).

\code{rvng()} returns a sequence of uniform pseudorandom numbers
using the Von Neumann middle-square method.
}
\examples{
print(set.rng())
rng(10)
.rng
}
